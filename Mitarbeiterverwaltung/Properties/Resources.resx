<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HelpString" xml:space="preserve">
    <value>Informationen zum Programm: 
Das Ihnen vorliegende Programm dient der digitalen Zeiterfassung und Verwaltung von Mitarbeitern Ihrer Firma. Neben den Stempelzeiten können auch die Urlaubs- und Krankheitstage komfortabel mit der Software organisiert werden. Auch die automatische Erfassung von Überstunden ist möglich.

Im Folgenden werden die verschiedenen Funktionen kurz vorgestellt:

Login Bereich:
Dabei handelt es sich um den Startbildschirm des Programmes, welcher den Benutzer zum Einloggen auffordert. Für die Anmeldung wird Ihre persönliche Mitarbeiter-ID benötigt. 

Einstellungen:
Informationen zu den hinterlegten Firmeninformationen finden Sie in der oberen, linken Ecke des Startbildschirmes. Unter „Datei“-&gt; „Einstellungen“ haben Sie die Möglichkeit, bei Änderungen an ihren Firmeninformationen, den Namen Ihrer Firma oder Ihr Logo zu ändern und die Einstellungen zur Zeiterfassung anzupassen. Überprüfen können Sie die hinterlegten Daten unter „Info“. Die Einstellungen können nur geändert werden, wenn sich ein Benutzer im System über sein Passwort authentifiziert hat und über mindestens einen untergebenen Mitarbeiter verfügt.

Zeiterfassung:
Nach gelungener Anmeldung gelangen Sie zur Hauptansicht des Programms. Diese ist auf die wesentlichen Funktionen reduziert. So wird in der Mitte eine Schaltfläche zum Ein- bzw. Ausstempeln angezeigt.  Je nachdem, ob Sie bereits eingestempelt sind, sehen Sie entweder „Einstempeln“ oder „Ausstempeln“ auf der Schaltfläche. Die Zeiterfassung läuft nun bis zum Zeitpunkt des Ausstempelns.

Statistiken:
In der linken unteren Ecke werden Ihnen Ihre persönlichen Arbeitsstatistiken angezeigt. Die oberste Zeile zeigt die gerundete Arbeitszeit für den aktuellen Monat sowie dahinter in Klammern die exakte Arbeitszeit an. In der darunter liegenden Zeile können Sie den aktuellen Stand Ihrer Überstunden einsehen. In der letzten Zeile werden die verbleibenden Urlaubstage angezeigt.  

Urlaubsverwaltung:
In der unteren linken Ecke der Hauptansicht befindet sich die Urlaubsverwaltung. In diesem Bereich haben Sie die Möglichkeiten „Neuen Antrag stellen“, um einen Urlaub zu beantragen und „Anträge einsehen“, um den Status Ihrer bisherigen Anträge zu prüfen. Zusätzlich zum Start- und Enddatum Ihres Urlaubs haben Sie die Möglichkeit auszuwählen, ob Beginn oder Ende des Urlaubs aus einem halben Urlaubstag bestehen soll, dies geschieht durch Auswählen des Steuerelements „halber Tag“ neben dem gewünschten Datum. Sobald ein gültiges Datum gewählt wurde, wird die Vorschau über die verbleibenden Urlaubstage aktualisiert. Außerdem gibt es die Möglichkeit Überstunden im Urlaubsantrag zu verrechnen, sofern dies gewünscht ist. Zum Abschluss des Antrages wählen Sie „Absenden“. Es kann immer nur ein Antrag zur gleichen Zeit gestellt werden. Erst wenn ein Antrag genehmigt oder abgelehnt wurde, kann ein neuer Antrag gestellt werden.

Mitarbeiterverwaltung:
Im Falle einer vorliegenden Führungsaufgabe haben Sie zusätzlich die Möglichkeit durch ein persönliches Kennwort Zugang zur Mitarbeiterverwaltung zu erlangen. Sollte die Anmeldung mittels persönlichen Kennworts nicht möglich sein, müssen Sie bei Ihrem Vorgesetzten ein Zurücksetzen des Passworts beantragen. Anschließend kann ein neues Kennwort gesetzt werden.

In der Ansicht der Mitarbeiterverwaltung erhalten Sie eine Übersicht über Ihre untergebenen Mitarbeiter, deren Arbeitszeiten und Urlaubstage. In der unteren Programmleiste gibt es über Schaltflächen die Möglichkeit einen neuen Mitarbeiter anzulegen „Mitarbeiter Hinzufügen“ oder einen ausgewählten Mitarbeiter zu bearbeiten „Mitarbeiter Bearbeiten“. 

Detailansicht Mitarbeiter:
Die Mitarbeiterverwaltung bietet die Möglichkeit, Untergebene zu bearbeiten (siehe Mitarbeiterverwaltung). In der Detailansicht befinden sich die Reiter „Persönliche Daten“, „Pausenzeiten“, „Stempelzeiten“, „Krankheit“ und „Urlaub“. Außerdem findet sich hier die Möglichkeit, einen Mitarbeiter zu entfernen. Diese sind im Folgenden erläutert.

Persönliche Daten:
In dem Reiter “Persönliche Daten“ lässt sich die Anschrift des Untergebenen bearbeiten und gleichzeitig die vorgesehenen Arbeitsstunden und Urlaubstage festlegen. Außerdem befindet sich in diesem Reiter die Möglichkeit für den Vorgesetzten das Passwort für seinen Untergebenen zurückzusetzen. Dabei gilt es zu beachten, dass die vorgesehenen Arbeitsstunden nur zum Monatsanfang angepasst werden dürfen.

Pausenzeiten:
In diesem Reiter lassen sich neue Pausenzeiten für den Mitarbeiter mit Beginn und Endzeit hinzufügen oder bereits vorhandene Pausen entfernen.

Stempelzeiten:
Der Reiter „Stempelzeiten“ dient der Einsicht der exakten Stempelzeiten des Mitarbeiters und ermöglicht zudem eine Korrektur fehlerhaft eingetragener Stempelzeiten durch den Vorgesetzten. 

Krankheit:
Der Reiter „Krankheit“ ermöglicht es Fehlzeiten des Mitarbeiters anzulegen oder diese zu entfernen.

Urlaub:
Der letzte Reiter „Urlaub“ stellt die Vorgesetzten-Perspektive der Anträge auf Urlaub dar (siehe Urlaubsverwaltung). Hier kann ein eingegangener Antrag ausgewählt und entweder genehmigt oder verweigert werden.

Mitarbeiter hinzufügen:
Die Funktion „Mitarbeiter Hinzufügen“ beinhaltet zwei Reiter, „Persönliche Daten“ und „Pausenzeiten“ aus der Detailansicht Mitarbeiter. Mit Auswahl der Schaltfläche „Speichern“ wird ein neuer Mitarbeiter angelegt.

Archivierung:
Immer zum Monatsanfang werden die Arbeitszeiten aller Mitarbeiter in eine separate CSV-Datei exportiert und stehen im System nicht mehr zur Verfügung. Die exportierten Daten können nun beispielsweise extern gesichert werden.


Bei weiteren Fragen kontaktieren Sie den Support unter support@mitarbeiterverwaltung.de</value>
  </data>
</root>